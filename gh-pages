#
# Run Script
#
# MIT License
# Copyright (c) 2015 GochoMugo <mugo@forfuture.co.ke>
#


# metadata
AUTHOR="GochoMugo <mugo@forfuture.co.ke>"
VERSION="0.0.0"


# script variables
LOG_TITLE="gh-pages"
command -v gh-pages > /dev/null 2>&1 && {
  CMD="$(which gh-pages)"
  ROOT="$(dirname ${CMD})"
} || {
  ROOT="."
}
ORIGIN="${ROOT}/gh-pages-lib"
TEMPLATES="${ROOT}/gh-pages-templates"

# templates
GITBOOK_URL="https://github.com/GochoMugo/gh-pages-gitbook.git"
JEKYLL_URL="https://github.com/GochoMugo/gh-pages-jekyll.git"

# github access tokens
SCOPES="[\"public_repo\"]"


# utilities
source $ORIGIN/utils.sh


case ${1} in
  "prepare" )
    log "preparing repository" 0
    mkdir -p .travis
    cp -rf ${ORIGIN}/* ${ORIGIN}/.travis.yml .travis
    [ ${2} ] && {
      log "using template: ${2}" 0
      templateDir="$TEMPLATES/${2}"
      [ ! -d ${templateDir} ] && {
        log "missing template" 2
        exit
      }
      cp -rf ${templateDir}/* ${templateDir}/.travis.yml .travis > /dev/null 2>&1
    }
    mv -i .travis/.travis.yml .
    log "done with preparation" 1
  ;;
  "finish" )
    log "finishing up" 0
    command -v travis > /dev/null 2>&1 || {
      log "travis command missing" 2
      log "please install this command using: gem install travis" 2
      exit 1
    }
    CONFIG_FILE=".travis/config.sh"
    if [ ! -e ${CONFIG_FILE} ]
    then
      log "please fill in these details" 0
      BRANCH="gh-pages"
      DEST_DIR="_out"
      if [ -d .git ]
      then
        REPO_URL="$(git remote -v | grep -Ei 'origin.*push' | grep -Eio '[a-z]+://.* ')"
        USER_NAME="$(git config user.name)"
        USER_EMAIL="$(git config user.email)"
      fi
      read -p "    Repository Url [$REPO_URL]: " REPO_URL
      read -p "    Branch to Deploy to [${BRANCH}]: " BRANCH
      read -p "    Output Directory [${DEST_DIR}]: " DEST_DIR
      read -p "    Github Username [${USER_NAME}]: " USER_NAME
      read -p "    Email Address [${USER_EMAIL}]: " USER_EMAIL
      if [ ! -e .token ]
      then
        read -p "    Github Password: " -s USER_PASS
        echo
        echo "    --- Please Wait ---"
        echo
        curl -s \
          -u ${USER_NAME}:${USER_PASS} \
          -X POST https://api.github.com/authorizations \
          --data "{\"scopes\": ${SCOPES}, \
            \"note\": \"gh-pages: ${REPO_URL}\"}" > .res
        cat .res \
          | grep -Ei "\"token\": " \
          | grep -Eio ": \"[a-z0-9]+" \
          | grep -Eio "[a-z0-9]+" > .token
      fi
      GH_TOKEN="$(cat .token)"
      [ ${GH_TOKEN} ] || {
        log "failed to generate an access token from Github" 2
        ask_bool "show error response" "n" && {
          cat .res
          rm .res .token
        }
        exit 1
      }
      rm .res
      echo "REPO_URL=${REPO_URL}" >> ${CONFIG_FILE}
      echo "BRANCH=${BRANCH}" >> ${CONFIG_FILE}
      echo "DEST_DIR=${DEST_DIR}" >> ${CONFIG_FILE}
      echo "USER_NAME=${USER_NAME}" >> ${CONFIG_FILE}
      echo "USER_EMAIL=${USER_EMAIL}" >> ${CONFIG_FILE}
      travis encrypt GH_TOKEN=${GH_TOKEN} \
        --skip-version-check --add || {
        log "failed encrypting with travis!" 2
        log "!! note that your github access token has been saved to .token" 2
        log "!! ensure you do NOT commit this file" 2
        log "!! RETRY! On success, .token will be auto-deleted" 2
        rm ${CONFIG_FILE}
        exit 1
      }
      rm .token
      log "finished!" 1
    fi
  ;;
  "template" )
    log "adding/upgrading ${2} from git Url" 0
    [ ${2} ] || {
      log "template name is required" 2
      exit
    }
    [ ${3} ] || {
      log "git-url is required" 2
      exit
    }
    cd /tmp/
    rm -rf template
    git clone ${3} template > /dev/null 2>&1 && {
      rm -rf ${TEMPLATES}/${2}
      mv template ${TEMPLATES}/${2}
    } || {
      log "failed to get ${2}" 2
    }
  ;;
  "recommended-templates" )
    log "adding/upgrading recommended templates for: " 0
    ask_bool "gitbook" "y" && {
      gh-pages template gitbook ${GITBOOK_URL}
    }
    ask_bool "jekyll" "y" && {
      gh-pages template jekyll ${JEKYLL_URL}
    }
    log "done!" 0
  ;;
  "version" )
    log "gh-pages by ${AUTHOR}" 0
    log "gh-pages version ${VERSION}" 0
  ;;
  "upgrade" )
    log "upgrading to the latest version" 0
    wget -qO- http://git.io/vU7iB | bash
  ;;
  "info" | "help" | * )
    echo
    echo " Preparing Repos:"
    echo "    ⇒ gh-pages prepare [template-name]"
    echo
    echo " Finishing on Repos:"
    echo "    ⇒ gh-pages finish"
    echo
    echo " Adding templates:"
    echo "    ⇒ gh-pages template <name> <git-url>"
    echo
    echo " Scripts run on Travis during each Build:"
    echo "    .travis/deps.sh -- install dependencies"
    echo "    .travis/build.sh -- build your website"
    echo "    .travis/deploy.sh -- deploys the site"
    echo
    echo " Other Scripts:"
    echo "    .travis/config.sh -- your configuration information"
    echo
    echo " Other commands:"
    echo "    ⇒ gh-pages version # show version information"
    echo "    ⇒ gh-pages upgrade # upgrade gh-pages"
    echo
    echo " More Information:"
    echo "    You can easily install recommended templates using"
    echo "     ⇒ gh-pages recommended-templates"
    echo
  ;;
esac

